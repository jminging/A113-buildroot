name: build-a113x

on:
  workflow_dispatch:
    inputs:
      git-address:
        description: 'git-address'
        required: true
        default: 'https://github.com/buildroot/buildroot.git'
      branches-tag:
        description: 'branches-tag'
        required: true
        default: '2018.11.x'
      patch-git-address:
        description: 'patch-git-address'
        required: false
        default: 'https://github.com/miricy/a113gateway.git'
      board:
        description: 'board'
        required: true
        default: 'v3s'
      build-with:
        description: 'build-with'
        required: false
        default: ''

env:
  TZ: Asia/Shanghai


jobs:
  build:
    runs-on: ubuntu-18.04
    if: github.event.repository.owner.id == github.event.sender.id
    steps:
      - name: SSH connection to Actions
        uses: csexton/debugger-action@master
        if: env.SSH_ACTIONS == 'true' || contains(github.event.action, 'ssh')

      - name: Install Packages
        run: |
          sudo apt-get -qq update
          sudo apt-get -qq upgrade
          sudo apt-get install -y make gcc g++ unzip bc python device-tree-compiler mtd-utils
          sudo apt install wget git bc bison linux-headers-$(uname -r)
          

      - name: Initialization env
        run: |
          sudo timedatectl set-timezone "$TZ"
          sudo mkdir -p /workdir
          sudo chown $USER:$GROUPS /workdir

      - name: Clone patch source code
        working-directory: /workdir
        run: |
          df -hT $PWD
          git clone --depth 1 ${{github.event.inputs.patch-git-address}} -b master patch
          ln -s /workdir/patch $GITHUB_WORKSPACE/patch

      - name: Clone source code
        working-directory: /workdir
        run: |
          df -hT $PWD
          git clone --depth 1 ${{github.event.inputs.git-address}} -b ${{github.event.inputs.branches-tag}} buildroot
          ln -s /workdir/buildroot $GITHUB_WORKSPACE/buildroot

      - name: Build
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          cd buildroot
          echo '---start copy files---'
          cp -ra /workdir/patch/buildroot /workdir
          echo '---start make---'
          make -j$(nproc) || make -j1 || make -j1 V=s

          echo '---pre_build---'
          cp -rf /home/runner/work/buildroot-actions/buildroot-actions/${{github.event.inputs.board}}/buildroot /opt
          cd /opt/buildroot
          sh ./pre_build.sh
          make
          echo '---start pack---'
          sh ./pack.sh
          echo '---start copy firmware---'
          cp output/build/uboot-v3s-spi-experimental/u-boot-sunxi-with-spl.bin /opt/firmware
          cp output/images/sun8i-v3s-licheepi-zero-dock.dtb /opt/firmware
          cp output/images/zImage /opt/firmware
          cp jffs2.bin /opt/firmware
          cp flash_32m.bin /opt/firmware
          echo '---END---'


      - name : Upload buildroot-${{github.event.inputs.branches-tags}}-${{github.event.inputs.board}}
        uses: actions/upload-artifact@master
        with:
          name: buildroot-${{github.event.inputs.branches-tags}}-${{github.event.inputs.board}}
          path: /opt/firmware


